{"version":3,"sources":["../../models/userModel.js"],"names":["mongoose","require","mongoosePaginate","Schema","bcrypt","modelHelpers","UserSchema","password","type","String","email","unique","required","firstName","lastName","registrationDate","Date","methods","toDTO","obj","toJSON","dto","phoneNumber","pre","next","user","isModified","isNew","genSalt","err","salt","hash","comparePassword","passw","cb","compare","isMatch","module","exports","updateUser","_id","options","callback","query","update","User","findOneAndUpdate","plugin","method","model"],"mappings":";;;;AAAA,IAAIA,WAAsBC,QAAQ,UAAR,CAA1B;AACA,IAAIC,mBAAsBD,QAAQ,mBAAR,CAA1B;AACA,IAAIE,SAAsBH,SAASG,MAAnC;AACA,IAAIC,SAAsBH,QAAQ,QAAR,CAA1B;AACA,IAAII,eAAsBJ,QAAQ,mBAAR,CAA1B;;AAEA,IAAIK,aAAa,IAAIH,MAAJ,CACb;AACEI,cAAU,EAACC,MAAMC,MAAP,EADZ;AAEEC,WAAO,EAACF,MAAMC,MAAP,EAAeE,QAAQ,IAAvB,EAA6BC,UAAU,IAAvC,EAFT;AAGEC,eAAW,EAACL,MAAMC,MAAP,EAAeG,UAAU,IAAzB,EAHb;AAIEE,cAAU,EAACN,MAAMC,MAAP,EAAeG,UAAU,IAAzB,EAJZ;AAKEG,sBAAkB,EAACP,MAAMQ,IAAP,EAAaJ,UAAU,KAAvB;AALpB,CADa,CAAjB;;AAUAN,WAAWW,OAAX,CAAmBC,KAAnB,GAA2B,YAAW;AAAA;;AACpC,QAAIC,MAAM,KAAKC,MAAL,EAAV;AACA,QAAIC;AACFX,eAAOS,IAAIT,KADT;AAEFG,mBAAWM,IAAIN,SAFb;AAGFC,kBAAUK,IAAIL;AAHZ,0CAISK,IAAIN,SAJb,wCAKWM,IAAIG,WALf,6CAMgBH,IAAIJ,gBANpB,QAAJ;AAQA,WAAOM,GAAP;AACD,CAXD;;AAaAf,WAAWiB,GAAX,CAAe,MAAf,EAAuB,UAAUC,IAAV,EAAgB;AACnC,QAAIC,OAAO,IAAX;AACA,QAAI,KAAKC,UAAL,CAAgB,UAAhB,KAA+B,KAAKC,KAAxC,EAA+C;AAC3CvB,eAAOwB,OAAP,CAAe,EAAf,EAAmB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACpC,gBAAID,GAAJ,EAAS;AACL,uBAAOL,KAAKK,GAAL,CAAP;AACH;AACDzB,mBAAO2B,IAAP,CAAYN,KAAKlB,QAAjB,EAA2BuB,IAA3B,EAAiC,UAAUD,GAAV,EAAeE,IAAf,EAAqB;AAClD,oBAAIF,GAAJ,EAAS;AACL,2BAAOL,KAAKK,GAAL,CAAP;AACH;AACDJ,qBAAKlB,QAAL,GAAgBwB,IAAhB;AACAP;AACH,aAND;AAOH,SAXD;AAYH,KAbD,MAaO;AACH,eAAOA,MAAP;AACH;AACJ,CAlBD;;AAoBAlB,WAAWW,OAAX,CAAmBe,eAAnB,GAAqC,UAAUC,KAAV,EAAiBC,EAAjB,EAAqB;AACtD9B,WAAO+B,OAAP,CAAeF,KAAf,EAAsB,KAAK1B,QAA3B,EAAqC,UAAUsB,GAAV,EAAeO,OAAf,EAAwB;AACzD,YAAIP,GAAJ,EAAS;AACL,mBAAOK,GAAGL,GAAH,CAAP;AACH;AACDK,WAAG,IAAH,EAASE,OAAT;AACH,KALD;AAMH,CAPD;;AASAC,OAAOC,OAAP,CAAeC,UAAf,GAA4B,UAAUC,GAAV,EAAef,IAAf,EAAqBgB,OAArB,EAA8BC,QAA9B,EAAwC;AAChE,QAAIC,QAAQ,EAACH,KAAKf,KAAKe,GAAX,EAAZ;AACA,QAAII,SAAS;AACT/B,mBAAWY,KAAKZ,SADP;AAETC,kBAAUW,KAAKX;AAFN,KAAb;AAIA+B,SAAKC,gBAAL,CAAsBH,KAAtB,EAA6BC,MAA7B,EAAqCH,OAArC,EAA8CC,QAA9C;AACH,CAPD;;AASApC,WAAWyC,MAAX,CAAkB7C,gBAAlB;AACAI,WAAW0C,MAAX,CAAkB,QAAlB,EAA4B3C,aAAae,MAAzC;AACA,IAAIyB,OAAOR,OAAOC,OAAP,GAAiBtC,SAASiD,KAAT,CAAe,MAAf,EAAuB3C,UAAvB,CAA5B","file":"userModel.js","sourcesContent":["var mongoose            = require('mongoose');\nvar mongoosePaginate    = require('mongoose-paginate');\nvar Schema              = mongoose.Schema;\nvar bcrypt              = require('bcrypt');\nvar modelHelpers        = require('./modelHelpers.js');\n\nvar UserSchema = new Schema(\n    {\n      password: {type: String},\n      email: {type: String, unique: true, required: true},\n      firstName: {type: String, required: true},\n      lastName: {type: String, required: true},\n      registrationDate: {type: Date, required: false},\n    }\n);\n\nUserSchema.methods.toDTO = function() {\n  var obj = this.toJSON();\n  var dto = {\n    email: obj.email,\n    firstName: obj.firstName,\n    lastName: obj.lastName,\n    firstName: obj.firstName,\n    phoneNumber: obj.phoneNumber,\n    registrationDate: obj.registrationDate,\n  };\n  return dto;\n};\n\nUserSchema.pre('save', function (next) {\n    var user = this;\n    if (this.isModified('password') || this.isNew) {\n        bcrypt.genSalt(10, function (err, salt) {\n            if (err) {\n                return next(err);\n            }\n            bcrypt.hash(user.password, salt, function (err, hash) {\n                if (err) {\n                    return next(err);\n                }\n                user.password = hash;\n                next();\n            });\n        });\n    } else {\n        return next();\n    }\n});\n\nUserSchema.methods.comparePassword = function (passw, cb) {\n    bcrypt.compare(passw, this.password, function (err, isMatch) {\n        if (err) {\n            return cb(err);\n        }\n        cb(null, isMatch);\n    });\n};\n\nmodule.exports.updateUser = function (_id, user, options, callback) {\n    var query = {_id: user._id};\n    var update = {\n        firstName: user.firstName,\n        lastName: user.lastName,\n    };\n    User.findOneAndUpdate(query, update, options, callback);\n};\n\nUserSchema.plugin(mongoosePaginate);\nUserSchema.method('toJSON', modelHelpers.toJSON);\nvar User = module.exports = mongoose.model('User', UserSchema);"]}