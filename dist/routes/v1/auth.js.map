{"version":3,"sources":["../../../routes/v1/auth.js"],"names":["express","require","router","Router","User","jwt","config","post","req","res","findOne","email","body","err","user","status","send","message","comparePassword","password","isMatch","token","encode","opt","secret","module","exports"],"mappings":";;AAAA,IAAIA,UAAcC,QAAQ,SAAR,CAAlB;AACA,IAAIC,SAAcF,QAAQG,MAAR,EAAlB;AACA,IAAIC,OAAcH,QAAQ,wBAAR,CAAlB;AACA,IAAII,MAAcJ,QAAQ,YAAR,CAAlB;AACA,IAAIK,SAAcL,QAAQ,qBAAR,CAAlB;;AAEAC,OAAOK,IAAP,CAAY,GAAZ,EAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAChCL,SAAKM,OAAL,CAAa,EAACC,OAAOH,IAAII,IAAJ,CAASD,KAAjB,EAAb,EAAsC,UAAUE,GAAV,EAAeC,IAAf,EAAqB;AACvD,YAAID,GAAJ,EAAS,MAAMA,GAAN;AACT,YAAI,CAACC,IAAL,EAAW;AACP,mBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,yBAAS;AADe,aAArB,CAAP;AAGH,SAJD,MAIO;AACHH,iBAAKI,eAAL,CAAqBV,IAAII,IAAJ,CAASO,QAA9B,EAAwC,UAAUN,GAAV,EAAeO,OAAf,EAAwB;AAC5D,oBAAIA,WAAW,CAACP,GAAhB,EAAqB;AACjB,wBAAIQ,QAAQhB,IAAIiB,MAAJ,CAAWR,IAAX,EAAiBR,OAAOiB,GAAP,CAAWC,MAA5B,CAAZ;AACA,2BAAOf,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBK,+BAAOA;AADiB,qBAArB,CAAP;AAGH,iBALD,MAKO;AACH,2BAAOZ,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,iCAAS;AADe,qBAArB,CAAP;AAGH;AACJ,aAXD;AAYH;AACJ,KApBD;AAqBH,CAtBD;;AAwBAQ,OAAOC,OAAP,GAAiBxB,MAAjB","file":"auth.js","sourcesContent":["var express     = require('express');\nvar router      = express.Router();\nvar User        = require('../../models/userModel');\nvar jwt         = require('jwt-simple');\nvar config      = require('../../config/config');\n\nrouter.post('/', function(req, res) {\n    User.findOne({email: req.body.email}, function (err, user) {\n        if (err) throw err;\n        if (!user) {\n            return res.status(403).send({\n                message: 'Authentication failed. User not found.'\n            });\n        } else {\n            user.comparePassword(req.body.password, function (err, isMatch) {\n                if (isMatch && !err) {\n                    var token = jwt.encode(user, config.opt.secret);\n                    return res.status(200).send({\n                        token: token\n                    });\n                } else {\n                    return res.status(403).send({\n                        message: 'Authentication failed. Wrong password.'\n                    });\n                }\n            });\n        }\n    });\n});\n\nmodule.exports = router;\n"]}